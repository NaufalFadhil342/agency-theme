{"version":3,"file":"static/js/872.995696c0.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","../node_modules/framer-motion/dist/es/context/PresenceContext.mjs","../node_modules/framer-motion/dist/es/utils/is-browser.mjs","../node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","../node_modules/framer-motion/dist/es/context/LazyContext.mjs","../node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","../node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","../node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","../node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","../node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","../node_modules/framer-motion/dist/es/motion/features/definitions.mjs","../node_modules/framer-motion/dist/es/utils/use-constant.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/node/id.mjs","../node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","../node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","../node_modules/framer-motion/dist/es/motion/index.mjs","../node_modules/framer-motion/dist/es/motion/features/load-features.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","../node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","../node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","../node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","../node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","../node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","../node_modules/framer-motion/dist/es/utils/clamp.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","../node_modules/framer-motion/dist/es/value/types/utils.mjs","../node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","../node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","../node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/html/use-props.mjs","../node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","../node_modules/framer-motion/dist/es/render/svg/use-props.mjs","../node_modules/framer-motion/dist/es/render/dom/use-render.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","../node_modules/framer-motion/dist/es/render/html/utils/render.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","../node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","../node_modules/framer-motion/dist/es/utils/resolve-value.mjs","../node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","../node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","../node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","../node_modules/framer-motion/dist/es/render/html/config-motion.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/pipe.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/frameloop/data.mjs","../node_modules/framer-motion/dist/es/frameloop/index.mjs","../node_modules/framer-motion/dist/es/frameloop/create-render-step.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/utils/noop.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/utils/array.mjs","../node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","../node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","../node_modules/framer-motion/dist/es/value/index.mjs","../node_modules/framer-motion/dist/es/value/types/color/utils.mjs","../node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","../node_modules/framer-motion/dist/es/value/types/color/hex.mjs","../node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","../node_modules/framer-motion/dist/es/value/types/color/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/index.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/utils/errors.mjs","../node_modules/framer-motion/dist/es/utils/time-conversion.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/animation/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/waapi/supports.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","../node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","../node_modules/framer-motion/dist/es/easing/ease.mjs","../node_modules/framer-motion/dist/es/utils/mix.mjs","../node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","../node_modules/framer-motion/dist/es/utils/mix-color.mjs","../node_modules/framer-motion/dist/es/utils/mix-complex.mjs","../node_modules/framer-motion/dist/es/utils/progress.mjs","../node_modules/framer-motion/dist/es/utils/interpolate.mjs","../node_modules/framer-motion/dist/es/utils/offsets/default.mjs","../node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","../node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","../node_modules/framer-motion/dist/es/easing/circ.mjs","../node_modules/framer-motion/dist/es/easing/back.mjs","../node_modules/framer-motion/dist/es/animation/utils/easing.mjs","../node_modules/framer-motion/dist/es/easing/anticipate.mjs","../node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","../node_modules/framer-motion/dist/es/utils/offsets/time.mjs","../node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","../node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","../node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","../node_modules/framer-motion/dist/es/animation/js/driver-frameloop.mjs","../node_modules/framer-motion/dist/es/animation/js/index.mjs","../node_modules/framer-motion/dist/es/animation/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/index.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/create-instant-animation.mjs","../node_modules/framer-motion/dist/es/render/utils/animation.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/@babel/runtime/helpers/esm/objectDestructuringEmpty.js","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/animation/GroupPlaybackControls.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/animate.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/render/dom/motion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs"],"sourcesContent":["import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { useConstant } from '../../utils/use-constant.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nlet id = 1;\nfunction useProjectionId() {\n    return useConstant(() => {\n        if (globalProjectionState.hasEverUpdated) {\n            return id++;\n        }\n    });\n}\n\nexport { useProjectionId };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { useProjectionId } from '../projection/node/id.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        /**\n         * Create a unique projection ID for this component. If a new component is added\n         * during a layout animation we'll use this to query the DOM and hydrate its ref early, allowing\n         * us to measure it as soon as any layout effect flushes pending layout animations.\n         *\n         * Performance note: It'd be better not to have to search the DOM for these elements.\n         * For newly-entering components it could be enough to only correct treeScale, in which\n         * case we could mount in a scale-correction mode. This wouldn't be enough for\n         * shared element transitions however. Perhaps for those we could revert to a root node\n         * that gets forceRendered and layout animations are triggered on its layout effect.\n         */\n        const projectionId = isStatic ? undefined : useProjectionId();\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, projectionId, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Treat x/y not as shortcuts but as actual attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, projectionId, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        if (projectionId) {\n            elementProps[\"data-projection-id\"] = projectionId;\n        }\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = key === \"x\" || key === \"y\" ? \"attr\" + key.toUpperCase() : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","const frameData = {\n    delta: 0,\n    timestamp: 0,\n};\n\nexport { frameData };\n","import { createRenderStep } from './create-render-step.mjs';\nimport { frameData } from './data.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frameData);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frameData);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frameData.delta = useDefaultElapsed\n        ? 1000 / 60\n        : Math.max(Math.min(timestamp - frameData.timestamp, maxElapsed), 1);\n    frameData.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        requestAnimationFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        requestAnimationFrame(processFrame);\n};\n\nexport { cancelSync, flushSync, sync };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { sync } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            sync.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const noop = (any) => any;\n\nexport { noop };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { sync } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                sync.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            sync.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            sync.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            sync.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { frameData } from '../frameloop/data.mjs';\nimport { sync } from '../frameloop/index.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.2.4\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                sync.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => sync.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                sync.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { isString, floatRegex, colorRegex, sanitize } from '../utils.mjs';\n\nconst colorToken = \"${c}\";\nconst numberToken = \"${n}\";\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nfunction analyseComplexValue(v) {\n    if (typeof v === \"number\")\n        v = `${v}`;\n    const values = [];\n    let numColors = 0;\n    let numNumbers = 0;\n    const colors = v.match(colorRegex);\n    if (colors) {\n        numColors = colors.length;\n        // Strip colors from input so they're not picked up by number regex.\n        // There's a better way to combine these regex searches, but its beyond my regex skills\n        v = v.replace(colorRegex, colorToken);\n        values.push(...colors.map(color.parse));\n    }\n    const numbers = v.match(floatRegex);\n    if (numbers) {\n        numNumbers = numbers.length;\n        v = v.replace(floatRegex, numberToken);\n        values.push(...numbers.map(number.parse));\n    }\n    return { values, numColors, numNumbers, tokenised: v };\n}\nfunction parse(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            output = output.replace(i < numColors ? colorToken : numberToken, i < numColors\n                ? color.transform(v[i])\n                : sanitize(v[i]));\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parse(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = { test, parse, createTransformer, getAnimatableNone };\n\nexport { analyseComplexValue, complex };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","function isWaapiSupportedEasing(easing) {\n    return (!easing || // Default easing\n        Array.isArray(easing) || // Bezier curve\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return Array.isArray(easing)\n        ? cubicBezierAsString(easing)\n        : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst easeIn = (p) => p * p;\nconst easeOut = reverseEasing(easeIn);\nconst easeInOut = mirrorEasing(easeIn);\n\nexport { easeIn, easeInOut, easeOut };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return (p) => `${p > 0 ? target : origin}`;\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        if (color.test(v)) {\n            return mixColor;\n        }\n        else {\n            return mixComplex;\n        }\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, \"Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.\");\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../../easing/cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../../easing/ease.mjs';\nimport { circIn, circInOut, circOut } from '../../easing/circ.mjs';\nimport { backIn, backInOut, backOut } from '../../easing/back.mjs';\nimport { anticipate } from '../../easing/anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\nconst isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { easingDefinitionToFunction, isEasingArray };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\nimport { isEasingArray, easingDefinitionToFunction } from '../utils/easing.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { sync, cancelSync } from '../../frameloop/index.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => sync.update(passTimestamp, true),\n        stop: () => cancelSync.update(passTimestamp),\n        now: () => performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","import { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\nimport { inertia } from '../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nfunction calculateDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration;\n}\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calculateDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            currentTime = timestamp - startTime;\n        }\n        // Rebase on delay\n        currentTime = Math.max(currentTime - delay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = currentIteration % 2;\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            const p = currentTime >= totalDuration\n                ? repeatType === \"reverse\" && iterationIsOdd\n                    ? 0\n                    : 1\n                : clamp(0, 1, iterationProgress);\n            elapsed = p * resolvedDuration;\n        }\n        const state = frameGenerator.next(elapsed);\n        let { value, done } = state;\n        if (onUpdate) {\n            onUpdate(mapNumbersToKeyframes ? mapNumbersToKeyframes(value) : value);\n        }\n        if (calculatedDuration !== null) {\n            done = currentTime >= totalDuration;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (isAnimationFinished) {\n            playState = \"finished\";\n            onComplete && onComplete();\n            animationDriver && animationDriver.stop();\n        }\n        return state;\n    };\n    const play = () => {\n        animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        playState = \"running\";\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime) {\n            // TODO When implementing play/pause, check WAAPI\n            // logic around finished animations\n            startTime = now;\n        }\n        holdTime = null;\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        get currentTime() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set currentTime(newTime) {\n            if (holdTime !== null || !animationDriver) {\n                holdTime = 0;\n            }\n            else {\n                startTime =\n                    animationDriver.now() - secondsToMilliseconds(newTime);\n            }\n        },\n        stop: () => {\n            onStop && onStop();\n            animationDriver && animationDriver.stop();\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { sync } from '../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    let { keyframes, duration = 300, ease } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n    });\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        sync.update(() => animation.cancel());\n        onComplete && onComplete();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        get currentTime() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set currentTime(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        stop: () => {\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            sync.update(() => animation.cancel());\n        },\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: mapEasingToNativeEasing(ease),\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        complex.test(value) && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\n\n/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction isZero(value) {\n    return (value === 0 ||\n        (typeof value === \"string\" &&\n            parseFloat(value) === 0 &&\n            value.indexOf(\" \") === -1));\n}\nfunction getZeroUnit(potentialUnitType) {\n    return typeof potentialUnitType === \"number\"\n        ? 0\n        : getAnimatableNone(\"\", potentialUnitType);\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, getZeroUnit, isTransitionDefined, isZero };\n","import { warning } from '../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from './waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from './create-instant-animation.mjs';\nimport { getDefaultTransition } from './utils/default-transitions.mjs';\nimport { isAnimatable } from './utils/is-animatable.mjs';\nimport { getKeyframes } from './utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from './utils/transitions.mjs';\nimport { animateValue } from './js/index.mjs';\n\nconst createMotionValueAnimation = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(options);\n        }\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { createMotionValueAnimation };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isZero, getZeroUnit } from './transitions.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let origin = transition.from !== undefined ? transition.from : value.get();\n    if (origin === \"none\" && isTargetAnimatable && typeof target === \"string\") {\n        /**\n         * If we're trying to animate from \"none\", try and get an animatable version\n         * of the target. This could be improved to work both ways.\n         */\n        origin = getAnimatableNone(valueName, target);\n    }\n    else if (isZero(origin) && typeof target === \"string\") {\n        origin = getZeroUnit(target);\n    }\n    else if (!Array.isArray(target) &&\n        isZero(target) &&\n        typeof origin === \"string\") {\n        target = getZeroUnit(origin);\n    }\n    /**\n     * If the target has been defined as a series of keyframes\n     */\n    if (Array.isArray(target)) {\n        /**\n         * Ensure an initial wildcard keyframe is hydrated by the origin.\n         * TODO: Support extra wildcard keyframes i.e [1, null, 0]\n         */\n        if (target[0] === null) {\n            target[0] = origin;\n        }\n        return target;\n    }\n    else {\n        return [origin, target];\n    }\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\n\nfunction createInstantAnimation({ keyframes, delay: delayBy, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        return {\n            stop: () => { },\n            currentTime: 0,\n        };\n    };\n    return delayBy\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: delayBy,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { setTarget } from './setters.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = animateTarget(visualElement, resolvedDefinition, options);\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => animateTarget(visualElement, resolved, options)\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(last);\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\n/**\n * @internal\n */\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, sync);\n            }\n        }\n        let animation = value.start(createMotionValueAnimation(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation = animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    return Promise.all(animations).then(() => {\n        transitionEnd && setTarget(visualElement, transitionEnd);\n    });\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction stopAnimation(visualElement) {\n    visualElement.values.forEach((value) => value.stop());\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\n\nexport { animateVisualElement, sortByTreeOrder, stopAnimation };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { animateVisualElement } from './animation.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { sync, cancelSync } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            sync.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelSync.update(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { createMotionValueAnimation } from '../../animation/index.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                sync.update(() => onDragStart(event, info));\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            sync.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(createMotionValueAnimation(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { sync } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        sync.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    sync.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = cssVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd && transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { cssVariableRegex, parseCSSVariable, resolveCSSVariables };\n","export default function _objectDestructuringEmpty(obj) {\n  if (obj == null) throw new TypeError(\"Cannot destructure \" + obj);\n}","import { cssVariableRegex } from '../../render/dom/utils/css-variables-conversion.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst varToken = \"_$css\";\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        /**\n         * We need to first strip and store CSS variables from the string.\n         */\n        const containsCSSVariables = latest.includes(\"var(\");\n        const cssVariables = [];\n        if (containsCSSVariables) {\n            latest = latest.replace(cssVariableRegex, (match) => {\n                cssVariables.push(match);\n                return varToken;\n            });\n        }\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        let output = template(shadow);\n        if (containsCSSVariables) {\n            let i = 0;\n            output = output.replace(varToken, () => {\n                const cssVariable = cssVariables[i];\n                i++;\n                return cssVariable;\n            });\n        }\n        return output;\n    },\n};\n\nexport { correctBoxShadow };\n","import { sync } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                sync.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            if (!projection.currentAnimation && projection.isLead()) {\n                this.safeToRemove();\n            }\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","class GroupPlaybackControls {\n    constructor(animations) {\n        this.animations = animations.filter(Boolean);\n    }\n    /**\n     * TODO: Filter out cancelled or stopped animations before returning\n     */\n    get currentTime() {\n        return this.animations[0].currentTime;\n    }\n    /**\n     * currentTime assignment could reasonably run every frame, so\n     * we iterate using a normal loop to avoid function creation.\n     */\n    set currentTime(time) {\n        for (let i = 0; i < this.animations.length; i++) {\n            this.animations[i].currentTime = time;\n        }\n    }\n    stop() {\n        this.animations.forEach((controls) => controls.stop());\n    }\n}\n\nexport { GroupPlaybackControls };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelSync, flushSync, sync } from '../../frameloop/index.mjs';\nimport { animate } from '../../animation/animate.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(elementId, latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            // Note: Currently only running on root node\n            this.potentialNodes = new Map();\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.elementId = elementId;\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            elementId && this.root.registerPotentialNode(elementId, this);\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        registerPotentialNode(elementId, node) {\n            this.potentialNodes.set(elementId, node);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = false) {\n            if (this.instance)\n                return;\n            this.isSVG =\n                instance instanceof SVGElement && instance.tagName !== \"svg\";\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            this.elementId && this.root.potentialNodes.delete(this.elementId);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged &&\n                            this.animationProgress === 0) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelSync.preRender(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        // Note: Currently only running on root node\n        didUpdate() {\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating)\n                return;\n            this.isUpdating = false;\n            /**\n             * Search for and mount newly-added projection elements.\n             *\n             * TODO: Every time a new component is rendered we could search up the tree for\n             * the closest mounted node and query from there rather than document.\n             */\n            if (this.potentialNodes.size) {\n                this.potentialNodes.forEach(mountNodeEarly);\n                this.potentialNodes.clear();\n            }\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            // Flush any scheduled updates\n            flushSync.update();\n            flushSync.preRender();\n            flushSync.render();\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            sync.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            sync.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        /**\n         * Frame calculations\n         */\n        resolveTargetDelta() {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !((isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent && relativeParent.layout) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target) {\n                    this.relativeParent = relativeParent;\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            const { target } = lead;\n            if (!target)\n                return;\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelSync.update(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = sync.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animate(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction mountNodeEarly(node, elementId) {\n    /**\n     * Rather than searching the DOM from document we can search the\n     * path for the deepest mounted ancestor and search from there\n     */\n    let searchNode = node.root;\n    for (let i = node.path.length - 1; i >= 0; i--) {\n        if (Boolean(node.path[i].instance)) {\n            searchNode = node.path[i];\n            break;\n        }\n    }\n    const searchElement = searchNode && searchNode !== node.root ? searchNode.instance : document;\n    const element = searchElement.querySelector(`[data-projection-id=\"${elementId}\"]`);\n    if (element)\n        node.mount(element, true);\n}\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelSync.read(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    sync.read(checkElapsed, true);\n    return () => cancelSync.read(checkElapsed);\n}\n\nexport { delay };\n","import { createMotionValueAnimation } from './index.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { GroupPlaybackControls } from './GroupPlaybackControls.mjs';\n\n/**\n * Animate a single value or a `MotionValue`.\n *\n * The first argument is either a `MotionValue` to animate, or an initial animation value.\n *\n * The second is either a value to animate to, or an array of keyframes to animate through.\n *\n * The third argument can be either tween or spring options, and optional lifecycle methods: `onUpdate`, `onPlay`, `onComplete`, `onRepeat` and `onStop`.\n *\n * Returns `AnimationPlaybackControls`, currently just a `stop` method.\n *\n * ```javascript\n * const x = useMotionValue(0)\n *\n * useEffect(() => {\n *   const controls = animate(x, 100, {\n *     type: \"spring\",\n *     stiffness: 2000,\n *     onComplete: v => {}\n *   })\n *\n *   return controls.stop\n * })\n * ```\n *\n * @public\n */\nfunction animate(from, to, transition = {}) {\n    const value = isMotionValue(from) ? from : motionValue(from);\n    value.start(createMotionValueAnimation(\"\", value, to, transition));\n    return value.animation || new GroupPlaybackControls([]);\n}\n\nexport { animate };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode(0, {});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { sync, cancelSync } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => sync.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        if (this.projection) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelSync.update(this.notifyUpdate);\n        cancelSync.render(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                sync.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, projectionId, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(projectionId, this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update(this.props, this.prevProps);\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.2.4\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.2.4 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n"],"names":["_defineProperty","obj","key","value","toPropertyKey","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","MotionContext","PresenceContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","isRefObject","ref","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","concat","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","_getCurrentTreeVarian","context","initial","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","_loop","isEnabled","useConstant","init","useRef","current","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","id","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","createMotionComponent","_ref","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","_objectSpread","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","projectionId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","useInsertionEffect","update","render","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","React","Provider","useCallback","instance","mount","unmount","useMotionRef","_ref2","layoutGroupId","createMotionProxy","createConfig","custom","Proxy","componentCache","Map","get","_target","has","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","default","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","int","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","transformIsDefault","_ref$enableHardwareAc","enableHardwareAcceleration","_ref$allowTransformNo","allowTransformNone","transformString","transformName","trim","buildTransform","_transformOrigin$orig","_transformOrigin$orig2","_transformOrigin$orig3","createHtmlRenderState","copyRawValuesOnly","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","validMotionProps","isValidMotionProp","isValidProp","shouldForward","require","_a","_objectWithoutProperties","excluded","sourceKeys","sourceSymbolKeys","propertyIsEnumerable","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","isSVGTag","attrX","attrY","pathLength","_ref$pathSpacing","pathSpacing","_ref$pathOffset","pathOffset","_excluded","viewBox","attrs","dimensions","pxOriginX","pxOriginY","calcSVGTransformOrigin","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","scrapeMotionValuesFromProps$1","toUpperCase","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","_len","transformers","_key","reduce","createLock","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","_classCallCheck","this","isMounted","_createClass","frameData","delta","timestamp","useDefaultElapsed","runNextFrame","isProcessing","stepsOrder","steps","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","schedule","callback","addToCurrentFrame","buffer","add","cancel","index","splice","delete","process","createRenderStep","sync","keepAlive","immediate","startLoop","cancelSync","flushSync","processStep","stepId","processFrame","requestAnimationFrame","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","HoverGesture","_Feature","_inherits","_super","_createSuper","FocusGesture","_this","isFocusVisible","matches","_this2","onFocus","onBlur","isNodeOrChild","child","parentElement","noop","any","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","_this$node$getProps","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps3","removePointerListener","removeFocusListener","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","InViewFeature","hasEnteredView","isInView","_this$node$getProps$v","viewport","rootMargin","_viewport$amount","amount","once","threshold","isIntersecting","_this2$node$getProps","onViewportEnter","onViewportLeave","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","shallowCompare","next","prev","prevLength","isNumericalString","isZeroValueString","addUniqueItem","arr","item","removeItem","SubscriptionManager","subscriptions","c","numSubscriptions","velocityPerSecond","velocity","frameDuration","isFloat","isNaN","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","notify","velocityChange","renderRequest","velocityCheck","hasAnimated","owner","subscription","on","unsubscribe","read","getSize","stop","eventManagers","clear","passiveEffect","stopPassiveEffect","startAnimation","_this3","Promise","resolve","animationStart","then","animationComplete","clearAnimation","animationCancel","clearListeners","motionValue","isColorString","testProp","splitColor","aName","bName","cName","_v$match","match","_v$match2","_slicedToArray","rgbUnit","clampRgbUnit","rgba","red","green","blue","_ref$alpha","alpha$1","hex","r","g","substring","parseInt","hsla","hue","saturation","lightness","color","colorToken","numberToken","analyseComplexValue","numColors","numNumbers","colors","_toConsumableArray","map","numbers","tokenised","createTransformer","_analyseComplexValue","numValues","output","convertNumbersToZero","complex","_b","getAnimatableNone","parsed","transformer","maxDefaults","applyDefaultFilter","_v$slice$split","slice","_v$slice$split2","defaultValue","functionRegex","functions","defaultValueTypes","backgroundColor","outlineColor","fill","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","testValueType","dimensionValueTypes","findDimensionValueType","find","valueTypes","findValueType","resolveVariant","getCurrent","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","_ref$transitionEnd","getOriginFromTransition","from","isWillChangeMotionValue","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","cubicBezierAsString","d","supportedWaapiEasing","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","easing","featureTests","waapi","Element","results","supports","mirrorEasing","reverseEasing","to","progress","hueToRgb","q","t","mixLinearColor","fromExpo","sqrt","colorTypes","getColorType","asRGBA","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","_ref$clamp","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","remaining","offsetProgress","fillOffset","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","_definition","isEasingArray","keyframes","_ref$duration","duration","keyframeValues","times","_ref$ease","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","envelope","derivative","_ref$bounce","bounce","_ref$velocity","_ref$mass","mass","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","resolveSpring","restDelta","restSpeed","_getSpringOptions","springOptions","isResolvedFromDuration","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","_ref$power","power","_ref$timeConstant","timeConstant","_ref$bounceDamping","bounceDamping","_ref$bounceStiffness","bounceStiffness","modifyTarget","_ref$restDelta","nearestBoundary","amplitude","ideal","timeReachedBoundary","spring$1","calcDelta","calcLatest","applyFriction","latest","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","now","performance","types","decay","tween","animateValue","animationDriver","mapNumbersToKeyframes","_ref$autoplay","autoplay","_ref$delay","delay","_ref$driver","driver","keyframes$1","_ref$type","_ref$repeat","repeat","_ref$repeatDelay","repeatDelay","_ref$repeatType","repeatType","onPlay","onStop","onComplete","onUpdate","generatorFactory","mirroredGenerator","generator","playState","holdTime","startTime","calculateDuration","resolvedDuration","Infinity","totalDuration","currentTime","tick","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","play","newTime","sample","acceleratedValues","sampleDelta","requiresPregeneratedKeyframes","valueName","createAcceleratedAnimation","_options$duration","sampleAnimation","pregeneratedKeyframes","keyframeOptions","iterations","direction","animateStyle","onfinish","getFinalKeyframe","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","isZero","getZeroUnit","potentialUnitType","getValueTransition","createMotionValueAnimation","valueTransition","_transition$elapsed","isTargetAnimatable","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","delayBy","setValue","createInstantAnimation","when","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","HTMLElement","acceleratedAnimation","animateVariant","variant","_ref$transition","transitionOverride","getAnimation","animateTarget","getChildAnimations","variantChildren","forwardDelay","_transition","_transition$delayChil","animations","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","_ref3","first","last","_ref4","_ref4$delay","_visualElement$makeTa","_visualElement$makeTa2","willChange","animationTypeState","getState","_ref5","protectedKeys","needsAnimating","shouldBlock","shouldBlockAnimation","appearId","shouldReduceMotion","remove","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","subscribe","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","time","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","panSession","stopAnimation","_this$getProps","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","_this$getProps2","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","applyConstraints","_this$getProps6","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps7","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this$getProps8","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","_this4","dragKey","externalMotionValue","_this5","_projection$layout$la","_this6","_this$getProps9","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","_this6$constraints$ax","_this7","stopPointerListener","_this7$getProps","_this7$getProps$dragL","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","DragGesture","removeGroupControls","controls","dragControls","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","pixelsToPercent","pixels","correctBorderRadius","correct","cssVariableRegex","maxDepth","getVariableValue","depth","_parseCSSVariable","exec","_match","parseCSSVariable","_parseCSSVariable2","fallback","getComputedStyle","getPropertyValue","resolveCSSVariables","TypeError","_objectDestructuringEmpty","varToken","correctBoxShadow","treeScale","projectionDelta","original","containsCSSVariables","cssVariables","shadow","xScale","yScale","averageScale","cssVariable","MeasureLayoutWithContext","_React__default$Compo","correctors","_this$props","layoutGroup","switchLayoutGroup","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","_this$props2","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","currentAnimation","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","deregister","React__default","_usePresence","useId","usePresence","_usePresence2","applyTo","boxShadow","GroupPlaybackControls","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","FlatTree","isDirty","transformAxes","animationTarget","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","elementId","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","potentialNodes","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","registerPotentialNode","subscriptionManager","args","SVGElement","_this$options","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","preRender","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","mountNodeEarly","resetTransformStyle","notifyLayoutUpdate","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","getLead","attemptToResolveRelativeTarget","_this$options3","relativeParent","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","isShared","canSkip","_this$options4","pendingAnimation","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevTreeScaleX","prevTreeScaleY","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","mixTargetDelta","mixAxisDelta","setTargetDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","_scaleCorrectors$key","corrected","num","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","searchNode","querySelector","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","position","positionalKeys","isPositionalKey","hasPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","_ref3$paddingLeft","_ref3$paddingRight","_ref5$paddingTop","_ref5$paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","targetBbox","jump","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","_ref12","_ref13","scrollTo","parseDomVariant","unitConversion","prefersReducedMotion","hasReducedMotionListener","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","_this$scrapeMotionVal","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","ProjectionNodeConstructor","renderedProps","_excluded2","_featureDefinitions$n","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","readValueFromInstance","valueFromInitial","getBaseTargetFromProps","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","HTMLVisualElement","_DOMVisualElement","defaultType","computedStyle","childSubscription","textContent","_get","Reflect","bind","property","receiver","base","getPrototypeOf","desc","SVGVisualElement","getAttribute","_getPrototypeOf","createDomVisualElement","motion","_ref$forwardMotionPro","createDomMotionConfig"],"sourceRoot":""}